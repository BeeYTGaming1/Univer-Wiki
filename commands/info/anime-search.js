const Discord = require('discord.js');
const Kitsu = require('kitsu.js');
const kitsu = new Kitsu();
var aq = require('animequote');
const fetch = require("node-fetch")

module.exports =  {
  name: "anime",
  category: "info",
  description: "Search th√¥ng tin anime",
  usage: "anime <name>",
  run: async (client, message, args, cmd) => {
    //checking args
   if (!args[0]) {
     return message.channel.send("H√£y cho t√¥i t√™n b·ªô anime n√†o ƒë√≥!");
      
    }
    //main part
        var search = message.content.split(/\s+/g).slice(1).join(" ");
        kitsu.searchAnime(search).then(async result => {
            if (result.length === 0) {
                return message.channel.send(`Kh√¥ng c√≥ k·∫øt qu·∫£ cho **${search}**!`);
            }
          
          var anime = result[0]

            let embed = new Discord.MessageEmbed()
                .setColor("RANDOM")
                .setAuthor(`${anime.titles.english ? anime.titles.english : search} | ${anime.showType}`, anime.posterImage.original)
                .setDescription(anime.synopsis.replace(/<[^>]*>/g, '').split('\n')[0])
                .addField('‚ùØ\u2000\Th√¥ng tin', `‚Ä¢\u2000\**T√™n Japan:** ${anime.titles.romaji}\n\‚Ä¢\u2000\**ƒê·ªô tu·ªïi ph√π h·ª£p:** ${anime.ageRating}\n\‚Ä¢\u2000\**Hentai:** ${anime.nsfw ? 'Yesüòè' : 'Noüò¢'}`, true)
                .addField('‚ùØ\u2000\S·ªë li·ªáu th·ªëng k√™', `‚Ä¢\u2000\**X·∫øp h·∫°ng:** ${anime.averageRating}\n\‚Ä¢\u2000\**Th·ª© t·ª± x·∫øp h·∫°ng:** ${anime.ratingRank}\n\‚Ä¢\u2000\**ƒê·ªô n·ªïi ti·∫øng:** ${anime.popularityRank}`, true)
                .addField('‚ùØ\u2000\Tr·∫°ng th√°i', `‚Ä¢\u2000\**Episodes:** ${anime.episodeCount ? anime.episodeCount : 'N/A'}\n\‚Ä¢\u2000\**Ng√†y xu·∫•t b·∫£n:** ${anime.startDate}\n\‚Ä¢\u2000\**Ng√†y k·∫øt th√∫c:** ${anime.endDate ? anime.endDate : "Still airing"}`, true)
            
                .setThumbnail(anime.posterImage.original, 200, 200);
          

            return message.channel.send({ embed })
        }).catch(err => {
            console.log(err) //cathing error
            return message.channel.send(`No results found for **${search}**!`);
        });
    }

}